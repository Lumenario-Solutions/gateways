# Generated by Django 5.2.5 on 2025-08-07 16:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('live', 'Live')], max_length=20, unique=True)),
                ('access_token', models.TextField(help_text='Encrypted access token')),
                ('expires_at', models.DateTimeField(help_text='Token expiration time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'MPesa Access Token',
                'verbose_name_plural': 'MPesa Access Tokens',
                'db_table': 'mpesa_access_tokens',
            },
        ),
        migrations.CreateModel(
            name='MpesaConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stk_callback_url', models.URLField(help_text='STK Push callback URL')),
                ('validation_url', models.URLField(help_text='C2B validation URL')),
                ('confirmation_url', models.URLField(help_text='C2B confirmation URL')),
                ('stk_timeout_seconds', models.PositiveIntegerField(default=300, help_text='STK push timeout in seconds')),
                ('api_timeout_seconds', models.PositiveIntegerField(default=30, help_text='API request timeout in seconds')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum number of retries for failed requests')),
                ('retry_delay_seconds', models.PositiveIntegerField(default=5, help_text='Delay between retries in seconds')),
                ('enable_stk_push', models.BooleanField(default=True, help_text='Enable STK Push functionality')),
                ('enable_c2b', models.BooleanField(default=True, help_text='Enable C2B functionality')),
                ('enable_b2c', models.BooleanField(default=False, help_text='Enable B2C functionality')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'MPesa Configuration',
                'verbose_name_plural': 'MPesa Configurations',
                'db_table': 'mpesa_configuration',
            },
        ),
        migrations.CreateModel(
            name='MpesaCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Credential set name', max_length=255)),
                ('environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('live', 'Live')], default='sandbox', max_length=20)),
                ('consumer_key', models.TextField(help_text='Encrypted consumer key')),
                ('consumer_secret', models.TextField(help_text='Encrypted consumer secret')),
                ('business_shortcode', models.CharField(help_text='Business shortcode', max_length=10)),
                ('passkey', models.TextField(help_text='Encrypted online passkey')),
                ('initiator_name', models.CharField(help_text='Initiator name for B2C/reversal transactions', max_length=255)),
                ('security_credential', models.TextField(help_text='Encrypted security credential')),
                ('base_url', models.URLField(help_text='Base URL for MPesa API')),
                ('is_active', models.BooleanField(default=True, help_text='Whether these credentials are active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'MPesa Credentials',
                'verbose_name_plural': 'MPesa Credentials',
                'db_table': 'mpesa_credentials',
                'unique_together': {('environment', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('STK_PUSH', 'STK Push'), ('B2C', 'Business to Customer'), ('B2B', 'Business to Business'), ('C2B_PAYBILL', 'Customer to Business - Paybill'), ('C2B_BUYGOODS', 'Customer to Business - Buy Goods'), ('REVERSAL', 'Transaction Reversal'), ('BALANCE_INQUIRY', 'Account Balance'), ('TRANSACTION_STATUS', 'Transaction Status')], max_length=20)),
                ('phone_number', models.CharField(help_text='Normalized phone number (254XXXXXXXXX)', max_length=15)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('description', models.CharField(help_text='Transaction description', max_length=255)),
                ('reference', models.CharField(help_text='Client transaction reference', max_length=100)),
                ('checkout_request_id', models.CharField(blank=True, help_text='MPesa checkout request ID', max_length=255, null=True, unique=True)),
                ('merchant_request_id', models.CharField(blank=True, help_text='MPesa merchant request ID', max_length=255, null=True)),
                ('mpesa_receipt_number', models.CharField(blank=True, help_text='MPesa transaction receipt number', max_length=50, null=True)),
                ('transaction_date', models.DateTimeField(blank=True, help_text='MPesa transaction timestamp', null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESSFUL', 'Successful'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('TIMEOUT', 'Timeout'), ('REVERSED', 'Reversed'), ('PROCESSING', 'Processing')], default='PENDING', max_length=20)),
                ('response_code', models.CharField(blank=True, help_text='MPesa response code', max_length=10)),
                ('response_description', models.TextField(blank=True, help_text='MPesa response description')),
                ('callback_received', models.BooleanField(default=False, help_text='Whether callback has been received')),
                ('callback_data', models.JSONField(blank=True, help_text='Raw callback data from MPesa', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Client IP address', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Client user agent')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='clients.client')),
            ],
            options={
                'verbose_name': 'MPesa Transaction',
                'verbose_name_plural': 'MPesa Transactions',
                'db_table': 'mpesa_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CallbackLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('callback_type', models.CharField(choices=[('STK_PUSH', 'STK Push Callback'), ('C2B_VALIDATION', 'C2B Validation'), ('C2B_CONFIRMATION', 'C2B Confirmation'), ('B2C', 'B2C Callback'), ('REVERSAL', 'Reversal Callback'), ('BALANCE_INQUIRY', 'Balance Inquiry Callback'), ('TRANSACTION_STATUS', 'Transaction Status Callback')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(help_text='Source IP address')),
                ('user_agent', models.TextField(blank=True, help_text='User agent from callback request')),
                ('headers', models.JSONField(default=dict, help_text='HTTP headers from callback request')),
                ('raw_data', models.JSONField(help_text='Raw callback data')),
                ('processed_successfully', models.BooleanField(default=False, help_text='Whether callback was processed successfully')),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed')),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When callback was processed', null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='callback_logs', to='mpesa.transaction')),
            ],
            options={
                'verbose_name': 'MPesa Callback Log',
                'verbose_name_plural': 'MPesa Callback Logs',
                'db_table': 'mpesa_callback_logs',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['client', 'status'], name='mpesa_trans_client__48a6d8_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['phone_number', 'created_at'], name='mpesa_trans_phone_n_41181d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['mpesa_receipt_number'], name='mpesa_trans_mpesa_r_39856b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['checkout_request_id'], name='mpesa_trans_checkou_3d1894_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'created_at'], name='mpesa_trans_status_6399bc_idx'),
        ),
        migrations.AddIndex(
            model_name='callbacklog',
            index=models.Index(fields=['callback_type', 'received_at'], name='mpesa_callb_callbac_73e765_idx'),
        ),
        migrations.AddIndex(
            model_name='callbacklog',
            index=models.Index(fields=['processed_successfully', 'received_at'], name='mpesa_callb_process_c35c12_idx'),
        ),
    ]
